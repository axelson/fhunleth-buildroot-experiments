# Firmware configuration file for up_board

require-fwup-version="1.4.0"  # For the GPT support

#
# Firmware metadata
#

# All of these can be overriden using environment variables of the same name.
#
#  Run 'fwup -m' to query values in a .fw file.
#  Use 'fw_printenv' to query values on the target.
#
# These are used by Nerves libraries to introspect.
define(NERVES_FW_PRODUCT, "Nerves Firmware")
define(NERVES_FW_DESCRIPTION, "")
define(NERVES_FW_VERSION, "${NERVES_SDK_VERSION}")
define(NERVES_FW_PLATFORM, "up_board")
define(NERVES_FW_ARCHITECTURE, "x86_64")
define(NERVES_FW_AUTHOR, "SmartRent")

# This configuration file will create an image that has the following
# partitions:
#
# +-------------------------------+
# | GPT                           |
# +-------------------------------+
# | Firmware configuration data   |
# | (formatted as uboot env)      |
# +-------------------------------+
# | p0: Kernel/EFI (Readonly FAT32) |
# | /EFI/BOOT/bootx64.efi         |
# +-------------------------------+

define(EFI_TYPE, "c12a7328-f81f-11d2-ba4b-00a0c93ec93b")
define(LINUX_ROOT_X86_64_TYPE, "4f68bce3-e8cd-4db1-96e7-fbcaf984b709")
define(LINUX_FILESYSTEM_DATA_TYPE, "0fc63daf-8483-4772-8e79-3d69d8477de4")

define(NERVES_SYSTEM_DISK_UUID, "c8decfc3-2f19-4b05-85fc-d86d61e0d48c")
define(NERVES_SYSTEM_EFI_PART_UUID, "b8f50e97-5fe1-4e21-9b59-9bc6cdf86008")
define(NERVES_SYSTEM_ROOTFS_PART_UUID, "2f53b205-337c-4129-8826-2b2368598d6a")
define(NERVES_SYSTEM_APP_PART_UUID, "1b238cbb-7974-4e14-b34e-b9766fb10f8b")

# The EFI partition contains the bootloader configuration
# 16 MB should be plenty for now.
define(EFI_PART_OFFSET, 4096)
define(EFI_PART_COUNT, 32768)

# Firmware archive metadata
meta-product = ${NERVES_FW_PRODUCT}
meta-description = ${NERVES_FW_DESCRIPTION}
meta-version = ${NERVES_FW_VERSION}
meta-platform = ${NERVES_FW_PLATFORM}
meta-architecture = ${NERVES_FW_ARCHITECTURE}
meta-author = ${NERVES_FW_AUTHOR}
meta-vcs-identifier = ${NERVES_FW_VCS_IDENTIFIER}
meta-misc = ${NERVES_FW_MISC}

file-resource bootx64.efi {
    host-path = "${BINARIES_DIR}/bzImage"
}

gpt gpt {
    guid = ${NERVES_SYSTEM_DISK_UUID}

    partition 0 {
        block-offset = ${EFI_PART_OFFSET}
        block-count = ${EFI_PART_COUNT}
        type = ${EFI_TYPE}
        guid = ${NERVES_SYSTEM_EFI_PART_UUID}
        name = "EFI Partition"
    }
}

task complete {
    on-init {
        gpt_write(gpt)

        trim(${EFI_PART_OFFSET}, ${EFI_PART_COUNT})
        fat_mkfs(${EFI_PART_OFFSET}, ${EFI_PART_COUNT})
        fat_mkdir(${EFI_PART_OFFSET}, "/EFI")
        fat_mkdir(${EFI_PART_OFFSET}, "/EFI/BOOT")
    }

    on-resource bootx64.efi { fat_write(${EFI_PART_OFFSET}, "/EFI/BOOT/bootx64.efi") }
}

