# Firmware configuration file for the Beaglebone Black

require-fwup-version="1.0.0"

#
# Firmware metadata
#

# All of these can be overriden using environment variables of the same name.
#
#  Run 'fwup -m' to query values in a .fw file.
#  Use 'fw_printenv' to query values on the target.
#
# These are used by Nerves libraries to introspect.
define(NERVES_FW_PRODUCT, "Nerves eMMC Loader Firmware")
define(NERVES_FW_DESCRIPTION, "")
define(NERVES_FW_VERSION, "${NERVES_SDK_VERSION}")
define(NERVES_FW_PLATFORM, "bbb")
define(NERVES_FW_ARCHITECTURE, "arm")
define(NERVES_FW_AUTHOR, "The Nerves Team")

# This configuration file will create an image that
# has an MBR and the following layout:
#
# +----------------------------+
# | MBR                        |
# +----------------------------+
# | Firmware configuration data|
# | (formatted as uboot env)   |
# +----------------------------+
# | p0: Boot partition (FAT32) |
# | u-boot.img                 |
# | zImage                     |
# +----------------------------+
# | p1: Unused                 |
# +----------------------------+
# | p2: Unused                 |
# +----------------------------+
# | p3: Unused                 |
# +----------------------------+

# The boot partition contains MLO, u-boot.img, and zImage
define(BOOT_PART_OFFSET, 4096)
define(BOOT_PART_COUNT, 524288)

# The following offset are not used by the firmware. We zero them
# out to avoid confusing errors with the production firmware trying
# to access these areas due to misconfigured eMMC vs. MicroSD card
# accesses.

# NOTE: These are the nerves_system_bbb locations. The BOOT_PART_OFFSET
# and BOOT_PART_COUNT overlap, so these need to be cleared out first.
define(UBOOT_ENV_OFFSET, 2048)
define(UBOOT_ENV_COUNT, 256)  # 128 KB
define(ROOTFS_A_PART_OFFSET, 32768)
define(ROOTFS_A_PART_COUNT, 262144)
define-eval(ROOTFS_B_PART_OFFSET, "${ROOTFS_A_PART_OFFSET} + ${ROOTFS_A_PART_COUNT}")
define(ROOTFS_B_PART_COUNT, ${ROOTFS_A_PART_COUNT})
define-eval(APP_PART_OFFSET, "${ROOTFS_B_PART_OFFSET} + ${ROOTFS_B_PART_COUNT}")
define(APP_PART_COUNT, 1048576)

# Firmware archive metadata
meta-product = ${NERVES_FW_PRODUCT}
meta-description = ${NERVES_FW_DESCRIPTION}
meta-version = ${NERVES_FW_VERSION}
meta-platform = ${NERVES_FW_PLATFORM}
meta-architecture = ${NERVES_FW_ARCHITECTURE}
meta-author = ${NERVES_FW_AUTHOR}
meta-vcs-identifier = ${NERVES_FW_VCS_IDENTIFIER}
meta-misc = ${NERVES_FW_MISC}

# File resources are listed in the order that they are included in the .fw file
# This is important, since this is the order that they're written on a firmware
# update due to the event driven nature of the update system.
file-resource MLO {
    host-path = "${BINARIES_DIR}/MLO"
}
file-resource u-boot.img {
    host-path = "${BINARIES_DIR}/u-boot.img"
}
file-resource zImage {
    host-path = "${BINARIES_DIR}/zImage"
}
file-resource am335x-boneblack.dtb { host-path = "${BINARIES_DIR}/am335x-boneblack.dtb" }
file-resource am335x-boneblack-uboot-univ.dtb { host-path = "${BINARIES_DIR}/am335x-boneblack-uboot-univ.dtb" }
file-resource am335x-boneblack-wireless.dtb { host-path = "${BINARIES_DIR}/am335x-boneblack-wireless.dtb" }
file-resource am335x-bonegreen.dtb { host-path = "${BINARIES_DIR}/am335x-bonegreen.dtb" }
file-resource am335x-bonegreen-wireless.dtb { host-path = "${BINARIES_DIR}/am335x-bonegreen-wireless.dtb" }
file-resource am335x-bonegreen-wireless-uboot-univ.dtb { host-path = "${BINARIES_DIR}/am335x-bonegreen-wireless-uboot-univ.dtb" }
file-resource am335x-bone-uboot-univ.dtb { host-path = "${BINARIES_DIR}/am335x-bone-uboot-univ.dtb" }
file-resource am335x-pocketbeagle.dtb { host-path = "${BINARIES_DIR}/am335x-pocketbeagle.dtb" }

mbr mbr {
    partition 0 {
        block-offset = ${BOOT_PART_OFFSET}
        block-count = ${BOOT_PART_COUNT}
        type = 0xc # FAT32
        boot = true
    }
}

task complete {
    on-init {
        mbr_write(mbr)

        # Clear out sections used by Nerves to avoid confusion.
        raw_memset(${UBOOT_ENV_OFFSET}, ${UBOOT_ENV_COUNT}, 0xff)
        raw_memset(${ROOTFS_A_PART_OFFSET}, 256, 0xff)
        raw_memset(${ROOTFS_B_PART_OFFSET}, 256, 0xff)
        raw_memset(${APP_PART_OFFSET}, 256, 0xff)

        # Create the loader's file partition
        fat_mkfs(${BOOT_PART_OFFSET}, ${BOOT_PART_COUNT})
        fat_setlabel(${BOOT_PART_OFFSET}, "LOADER")
    }

    on-resource MLO { fat_write(${BOOT_PART_OFFSET}, "MLO") }
    on-resource u-boot.img { fat_write(${BOOT_PART_OFFSET}, "u-boot.img") }
    on-resource zImage { fat_write(${BOOT_PART_OFFSET}, "zImage") }
    on-resource am335x-boneblack.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-boneblack.dtb") }
    on-resource am335x-boneblack-uboot-univ.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-boneblack-uboot-univ.dtb") }
    on-resource am335x-boneblack-wireless.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-boneblack-wireless.dtb") }
    on-resource am335x-bonegreen.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-bonegreen.dtb") }
    on-resource am335x-bonegreen-wireless.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-bonegreen-uboot-univ.dtb") }
    on-resource am335x-bonegreen-wireless-uboot-univ.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-bonegreen-wireless.dtb") }
    on-resource am335x-bone-uboot-univ.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-bone-uboot-univ.dtb") }
    on-resource am335x-pocketbeagle.dtb { fat_write(${BOOT_PART_OFFSET}, "am335x-pocketbeagle.dtb") }

    on-finish {
    }
}
